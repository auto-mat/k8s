#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: qgis-server-publish-pv-volume
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteMany
  storageClassName: "nfs"
  mountOptions:
    - hard
    - nfsvers=4.2
  nfs:
    path: /qgis-server-publish
    server: #@ data.values.nfsServer.clusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qgis-server-publish-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  storageClassName: "nfs"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: qgis-server-plugins-pv-volume
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  storageClassName: "nfs"
  mountOptions:
    - hard
    - nfsvers=4.2
  nfs:
    path: /qgis-server-plugins
    server: #@ data.values.nfsServer.clusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qgis-server-plugins-pv-claim
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: "nfs"
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: qgis-server
  spec:
    ports:
    - name: "5555"
      port: 5555
      targetPort: 5555
    selector:
      app: qgis-server
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: qgis-server
    name: qgis-server
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qgis-server
    template:
      metadata:
        labels:
          app: qgis-server
      spec:
        containers:
        - image: gisquick/qgis-server:3.22
          name: qgis-server
          imagePullPolicy: "IfNotPresent"
          env:
            - name: QGIS_SERVER_IGNORE_BAD_LAYERS
              valueFrom:
                configMapKeyRef:
                  key: QGIS_SERVER_IGNORE_BAD_LAYERS
                  name: qgis-server-env
            - name: QGIS_SERVER_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: QGIS_SERVER_LOG_LEVEL
                  name: qgis-server-env
            - name: QGIS_PLUGINPATH
              valueFrom:
                configMapKeyRef:
                  key: QGIS_PLUGINPATH
                  name: qgis-server-env
            - name: QGIS_SERVER_PARALLEL_RENDERING
              valueFrom:
                configMapKeyRef:
                  key: QGIS_SERVER_PARALLEL_RENDERING
                  name: qgis-server-env
          ports:
          - containerPort: 5555
          resources:
            limits:
              memory: 3Gi
          volumeMounts:
          - name: qgis-server-publish
            mountPath: /publish
          - name: qgis-server-plugins
            mountPath: /usr/lib/qgis/python/plugins
        volumes:
        - name: qgis-server-publish
          persistentVolumeClaim:
            claimName: qgis-server-publish-pv-claim
        - name: qgis-server-plugins
          persistentVolumeClaim:
            claimName: qgis-server-plugins-pv-claim
  status: {}
kind: List
metadata: {}
