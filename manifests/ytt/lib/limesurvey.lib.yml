#@ config_vars = [
#@     "DB_TYPE",
#@ ]
#@ secret_vars = [
#@    "DB_USERNAME",
#@    "DB_PASSWORD",
#@    "DB_HOST",
#@    "DB_PORT",
#@    "DB_NAME",
#@    "ADMIN_USER",
#@    "ADMIN_PASSWORD",
#@    "ADMIN_EMAIL",
#@    "LISTEN_PORT",
#@ ]

#@ port = 3000

#@ def limesurvey(app_name, image, config_map, secret_map):
apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      name: #@ app_name
    spec:
      ports:
        - name: "3000"

          port: #@ port
          targetPort: #@ port
      selector:
        app: #@ app_name
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: #@ app_name
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: #@ app_name
      template:
        metadata:
          labels:
            app: #@ app_name
        spec:
          containers:
            - image: #@ image
              name: #@ app_name
              ports:
                - containerPort: #@ port
              resources: {}
              volumeMounts:
                - mountPath: /var/www/html/upload/
                  name: #@ app_name + "-data"
              env:
                #@ for var in config_vars:
                - name: #@ var
                  valueFrom:
                    configMapKeyRef:
                      key: #@ var
                      name: #@ config_map
                #@ end
                #@ for var in secret_vars:
                - name: #@ var
                  valueFrom:
                    secretKeyRef:
                      key: #@ var
                      name: #@ secret_map
                #@ end
          volumes:
            - name: #@ app_name + "-data"
              persistentVolumeClaim:
                claimName: #@ app_name + "-data"

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: #@ app_name + "-data"
      name: #@ app_name + "-data"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
    status: {}
kind: List
metadata: {}
#@ end
