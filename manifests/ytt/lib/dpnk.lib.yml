#@ config_vars = [
#@  "DJANGO_SETTINGS_MODULE",
#@  "DJANGO_DEBUG",
#@  "DPNK_STATIC_URL",
#@  "DPNK_AKLUB_URL",
#@  "GUNICORN_NUM_WORKERS",
#@  "GUNICORN_TIMEOUT",
#@  "GUNICORN_PORT",
#@  "AWS_QUERYSTRING_AUTH",
#@  "DPNK_LOG_FILE",
#@  "DPNK_MEDIA_URL",
#@  "DPNK_BROKER_URL",
#@  "DPNK_CACHE_REDIS_LOCATION",
#@  "SINGLE_BEAT_REDIS_SERVER",
#@ ]
#@ secret_vars = [
#@  "DPNK_SECRET_KEY",
#@  "DPNK_DB_NAME",
#@  "DPNK_DB_PASSWORD",
#@  "DPNK_DB_HOST",
#@  "DPNK_DB_USER",
#@  "DPNK_ALLOWED_HOSTS",
#@  "DPNK_MAILING_API_KEY",
#@  "DPNK_ECOMAIL_MAILING_API_KEY",
#@  "NEW_RELIC_LICENSE_KEY",
#@  "NEW_RELIC_APP_NAME",
#@  "DPNK_AWS_ACCESS_KEY_ID",
#@  "DPNK_AWS_SECRET_ACCESS_KEY",
#@  "DPNK_AWS_STORAGE_BUCKET_NAME",
#@  "DPNK_PAYU_KEY_1",
#@  "DPNK_PAYU_KEY_2",
#@  "DPNK_PAYU_POS_AUTH_KEY",
#@  "DPNK_PAYU_POS_ID",
#@  "DPNK_FIO_TOKEN",
#@  "DPNK_RAVEN_DNS",
#@  "DPNK_GOOGLE_TAG_ID",
#@  "DPNK_SOCIAL_AUTH_FACEBOOK_KEY",
#@  "DPNK_SOCIAL_AUTH_FACEBOOK_SECRET",
#@  "DPNK_SOCIAL_AUTH_GOOGLE_OAUTH2_KEY",
#@  "DPNK_SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET",
#@  "DPNK_SOCIAL_AUTH_APPLE_ID_CLIENT",
#@  "DPNK_SOCIAL_AUTH_APPLE_ID_KEY",
#@  "DPNK_SOCIAL_AUTH_APPLE_ID_TEAM",
#@  "DPNK_SOCIAL_AUTH_APPLE_ID_SECRET",
#@  "STRAVA_CLIENT_ID",
#@  "STRAVA_CLIENT_SECRET",
#@  "GLS_PASSWORD",
#@  "GLS_USERNAME",
#@ ]

#@ load("redis.lib.yml", "redis")
#@ def web(app_name, image, config_map, secret_map, replicas, celery_replicas):
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: #@ app_name
  spec:
    ports:
    - name: "8600"
      port: 8600
      targetPort: 8000
    selector:
      app: #@ app_name
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: #@ app_name
  spec:
    replicas: #@ replicas
    selector:
      matchLabels:
        app: #@ app_name
    template:
      metadata:
        labels:
          app: #@ app_name
      spec:
        containers:
        - image: #@ image
          name: #@ app_name
          ports:
          - containerPort: 8080
          resources: {}
          command: ["/home/aplikace/docker-entrypoint.sh"]
          volumes:
            - name: logs
              emptyDir: {}
            - name: media
              emptyDir: {}
          env:
          #@ for var in config_vars:
          - name: #@ var
            valueFrom:
              configMapKeyRef:
                key: #@ var
                name: #@ config_map
          #@ end
          #@ for var in secret_vars:
          - name: #@ var
            valueFrom:
              secretKeyRef:
                key: #@ var
                name: #@ secret_map
          #@ end
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: #@ app_name + "-celery"
  spec:
    replicas: #@ celery_replicas
    selector:
      matchLabels:
        app: #@ app_name + "-celery"
    template:
      metadata:
        labels:
          app: #@ app_name + "-celery"
      spec:
        containers:
        - image: #@ image
          name: #@ app_name + "-celery"
          resources: {}
          command: ["pipenv", "run", "celery", "worker", "-A", "project.celery"]
          volumes:
            - name: logs
              emptyDir: {}
            - name: media
              emptyDir: {}
          env:
          #@ for var in config_vars:
          - name: #@ var
            valueFrom:
              configMapKeyRef:
                key: #@ var
                name: #@ config_map
          #@ end
          #@ for var in secret_vars:
          - name: #@ var
            valueFrom:
              secretKeyRef:
                key: #@ var
                name: #@ secret_map
          #@ end
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: #@ app_name + "-celery-beat"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: #@ app_name + "-celery-beat"
    template:
      metadata:
        labels:
          app: #@ app_name + "-celery-beat"
      spec:
        containers:
        - image: #@ image
          name: #@ app_name + "-celery-beat"
          resources: {}
          command: ["pipenv", "run", "celery", "beat", "-A", "project.celery", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler", "--loglevel=info"]
          volumes:
            - name: logs
              emptyDir: {}
            - name: media
              emptyDir: {}
          env:
          #@ for var in config_vars:
          - name: #@ var
            valueFrom:
              configMapKeyRef:
                key: #@ var
                name: #@ config_map
          #@ end
          #@ for var in secret_vars:
          - name: #@ var
            valueFrom:
              secretKeyRef:
                key: #@ var
                name: #@ secret_map
          #@ end
  status: {}
#@ redis(app_name + "-redis-broker")
#@ redis(app_name + "-redis-cache")
#@ redis(app_name + "-redis-beat")
kind: List
metadata: {}
#@ end
