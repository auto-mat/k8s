#@ config_vars = [
#@     "DJANGO_SETTINGS_MODULE",
#@     "AKLUB_DEBUG",
#@     "AWS_STORAGE_BUCKET_NAME",
#@     "AWS_S3_REGION_NAME",
#@     "AKLUB_CORS_ORIGIN_WHITELIST",
#@     "AKLUB_DEFAULT_FROM_EMAIL",
#@     "AKLUB_MEDIA_ROOT",
#@     "GUNICORN_TIMEOUT",
#@     "GUNICORN_WORKERS",
#@     "HEROKU_APP_URL",
#@     "AKLUB_ALLOWED_HOSTS",
#@     "SITE_NAME",
#@     "SUM_LAST_MONTH_PAYMENTS",
#@     "SUM_LAST_YEAR_PAYMENTS",
#@     "AWS_QUERYSTRING_EXPIRE",
#@     "WEB_URL",
#@     "DARUJME_EMAIL_AS_USERNAME",
#@     "DISABLE_SERVER_SIDE_CURSORS",
#@ ]
#@ secret_vars = [
#@    "AKLUB_ADMINS",
#@    "DATABASE_NAME",
#@    "DATABASE_USER",
#@    "DATABASE_PASSWORD",
#@    "DATABASE_HOST",
#@    "DATABASE_PORT",
#@    "SECRET_KEY",
#@    "AKLUB_RAVEN_DNS",
#@    "AWS_ACCESS_KEY_ID",
#@    "AWS_SECRET_ACCESS_KEY",
#@    "FLOWER_PASSWORD",
#@    "NEW_RELIC_APP_NAME",
#@    "NEW_RELIC_LICENSE_KEY",
#@    "REDIS_URL",
#@    "DAKTELA_USERNAME",
#@    "DAKTELA_PASSWORD",
#@    "DAKTELA_BASE_REST_API_URL",
#@ ]

#@ port = 8000
#@ load("redis.lib.yml", "redis")
#@ load("@ytt:template", "template")
#@ def klub_web(app_name, image, config_map, secret_map, replicas, celery_replicas, celery_log_level="info"):
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: #@ app_name
  spec:
    ports:
    - name: "8000"
      port: #@ port
      targetPort: #@ port
    selector:
      app: #@ app_name
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: #@ app_name
  spec:
    replicas: #@ replicas
    selector:
      matchLabels:
        app: #@ app_name
    template:
      metadata:
        labels:
          app: #@ app_name
      spec:
        containers:
        - image: #@ image
          name: #@ app_name
          ports:
          - containerPort: #@ port
          resources: {}
          command: ["/home/aplikace/docker-entrypoint.sh"]
          env:
          #@ for var in config_vars:
          - name: #@ var
            valueFrom:
              configMapKeyRef:
                key: #@ var
                name: #@ config_map
          #@ end
          #@ for var in secret_vars:
          - name: #@ var
            valueFrom:
              secretKeyRef:
                key: #@ var
                name: #@ secret_map
          #@ end
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: #@ app_name + "-celery"
  spec:
    replicas: #@ celery_replicas
    selector:
      matchLabels:
        app: #@ app_name + "-celery"
    template:
      metadata:
        labels:
          app: #@ app_name + "-celery"
      spec:
        containers:
        - image: #@ image
          name: #@ app_name + "-celery"
          resources: {}
          command: #@ ["celery", "worker", "-A", "project.celery", "-l", celery_log_level]
          env:
          #@ for var in config_vars:
          - name: #@ var
            valueFrom:
              configMapKeyRef:
                key: #@ var
                name: #@ config_map
          #@ end
          #@ for var in secret_vars:
          - name: #@ var
            valueFrom:
              secretKeyRef:
                key: #@ var
                name: #@ secret_map
          #@ end
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - test $(($(date +%s) - $(stat -c %Y /tmp/worker_heartbeat))) -lt 10
            initialDelaySeconds: 30
            periodSeconds: 120
          readinessProbe:
            exec:
              command:
                - sh
                - c
                - test -e /tmp/worker_ready
            initialDelaySeconds: 30
            periodSeconds: 120
  status: {}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: #@ app_name + "-celery-beat"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: #@ app_name + "-celery-beat"
    template:
      metadata:
        labels:
          app: #@ app_name + "-celery-beat"
      spec:
        containers:
        - image: #@ image
          name: #@ app_name + "-celery-beat"
          resources: {}
          command: ["celery", "beat", "-A", "project.celery", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler", "--loglevel=info"]
          env:
          #@ for var in config_vars:
          - name: #@ var
            valueFrom:
              configMapKeyRef:
                key: #@ var
                name: #@ config_map
          #@ end
          #@ for var in secret_vars:
          - name: #@ var
            valueFrom:
              secretKeyRef:
                key: #@ var
                name: #@ secret_map
          #@ end
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - python manage.py check_celerybeat_liveness
            initialDelaySeconds: 30
            periodSeconds: 120
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - test -e /tmp/worker_ready
            initialDelaySeconds: 30
            periodSeconds: 120
  status: {}
- #@ template.replace(redis(app_name + "-redis"))
kind: List
metadata: {}
#@ end
