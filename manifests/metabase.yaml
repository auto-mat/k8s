apiVersion: v1
kind: Service
metadata:
  name: metabase
spec:
  selector:
    name: metabase
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase
  labels:
    name: metabase
spec:
  replicas: 1
  selector:
    matchLabels:
      name: metabase
  template:
    metadata:
      labels:
        name: metabase
    spec:
      containers:
      - name: metabase
        image: 439267276348970/metabase:v1.41.6-2
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 3000
          name: metabase
        envFrom:
        - configMapRef:
            name: metabase-env
        - secretRef:
            name: metabase-access
        - name: AWS_AURORA_PG_RDS_DPNK_PROXY_REMOTE_HOST
          valueFrom:
            secretKeyRef:
              key: AWS_AURORA_PG_RDS_DPNK_PROXY_REMOTE_HOST
              name: dpnk-access
        - name: AWS_E2C_AURORA_PG_RDS_DPNK_PROXY_REMOTE_USERNAME_WITH_HOST
          valueFrom:
            secretKeyRef:
              key: AWS_E2C_AURORA_PG_RDS_DPNK_PROXY_REMOTE_USERNAME_WITH_HOST
              name: dpnk-access
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        volumeMounts:
          - mountPath: /root/.ssh/
            name: ssh-key
      volumes:
        - name: ssh-key
          secret:
            secretName: dpnk-access
            items:
            - key: aurora-rds-pg-dpnk-db-proxy
              path: aurora-rds-pg-dpnk-db-proxy.pem
            defaultMode: 0400
